name: CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  workflow_dispatch: ~

env:
  DOYO_CI: 1

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Start services
        run: ./dev boot -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(./dev ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                ./dev ps
                ./dev logs
                exit 1
              ;;
            esac
          done
          exit 1
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check HTTPS reachability
        run: curl  -vk -o /dev/null https://localhost
      - name: Push image
        run: |
          docker push ghcr.io/kilip/yawik/php
          docker push ghcr.io/kilip/yawik/caddy
          docker push ghcr.io/kilip/yawik/nuxt
          docker push ghcr.io/kilip/yawik/nuxt-dev
      #- name: Create test database
      #  run: |
      #    ./dev symfony -e test yawik:fixtures:load
      #- name: PHPUnit
      #  run: ./dev phpunit
      #- name: Doctrine Schema Validator
      #  run: docker-compose exec -T php bin/console doctrine:schema:validate --skip-sync
      #- name: Jest
      #  run: docker-compose exec -T pwa yarn test --ci --passWithNoTests
